-- T·∫£i Fluent UI Library
local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
-- √Çm thanh kh·ªüi ƒë·ªông
local startupSound = Instance.new("Sound")
startupSound.SoundId = "rbxassetid://8594342648"
startupSound.Volume = 5 -- ƒêi·ªÅu ch·ªânh √¢m l∆∞·ª£ng n·∫øu c·∫ßn
startupSound.Looped = false -- Kh√¥ng l·∫∑p l·∫°i √¢m thanh
startupSound.Parent = game.CoreGui-- ƒê·∫∑t parent v√†o CoreGui ƒë·ªÉ ƒë·∫£m b·∫£o √¢m thanh ph√°t
startupSound:Play() -- Ph√°t √¢m thanh khi script ch·∫°y
-- T·∫°o c·ª≠a s·ªï ch√≠nh
local Window = Library:CreateWindow{
    Title = "#OlwenTh",
    SubTitle = "@kevinproxlucky",
    TabWidth = 160,
    Size = UDim2.fromOffset(1280, 860),
    Resize = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Ph√≠m thu nh·ªè
}

-- T·∫°o ScreenGui ch·ª©a n√∫t ƒëi·ªÅu khi·ªÉn
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ControlGUI"
screenGui.Parent = game.CoreGui

-- T·∫°o n√∫t (ImageButton)
local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, 50, 0, 50) -- K√≠ch th∆∞·ªõc nh·ªè, h√¨nh vu√¥ng
toggleButton.Position = UDim2.new(1, -60, 0, 10) -- V·ªã tr√≠ g·∫ßn g√≥c ph·∫£i tr√™n
toggleButton.Image = "rbxassetid://7229442422" -- H√¨nh ·∫£nh c·ªßa n√∫t
toggleButton.BackgroundTransparency = 1 -- Kh√¥ng c√≥ n·ªÅn
toggleButton.Parent = screenGui

-- Bi·∫øn l∆∞u tr·∫°ng th√°i hi·ªÉn th·ªã Fluent UI
local isFluentVisible = true

-- Di chuy·ªÉn n√∫t
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    toggleButton.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = toggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- ·∫®n/Hi·ªán Fluent UI khi nh·∫•n n√∫t
toggleButton.MouseButton1Click:Connect(function()
    isFluentVisible = not isFluentVisible

    if isFluentVisible then
        -- Hi·ªán Fluent UI
        Window:Minimize(false) -- M·ªü l·∫°i c·ª≠a s·ªï
    else
        -- ·∫®n Fluent UI
        Window:Minimize(true) -- Thu nh·ªè c·ª≠a s·ªï
    end
end)

-- T·∫°o c√°c tab
local MainTab = Window:AddTab({ Title = "Main", Icon = "" })
local IslandTab = Window:AddTab({ Title = "ƒê·∫£o üèùÔ∏è", Icon = "" })
local OtherTab = Window:AddTab({ Title = "Kh√°c", Icon = "" })
local FruitTab = Window:AddTab({ Title = "Fruit", Icon = "" }) -- Tab Fruit m·ªõi

-- Bi·∫øn to√†n c·ª•c
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Fluent = Library -- G√°n bi·∫øn Fluent

local currentTween = nil
local leviathanGateConnection = nil
local rockConnection = nil -- No longer used for DescendantAdded
local scriptEnabled = false
local lockHeightMode = true
local destroyRockMode = false
local customY = 100
local tweenSpeed = 350
local minimized = false
local lastBoat, lastSeat = nil, nil
local playerTweening = false -- Kh√¥i ph·ª•c bi·∫øn playerTweening
local autoReturnEnabled = false
local killAuraEnabled = false
local killAuraRange = 100
local selectedIslandCoord = nil
local islandTweening = false
local boatProtectEnabled = false -- B·∫£o v·ªá thuy·ªÅn
local boatProtectImmediateEnabled = false -- B·∫£o v·ªá thuy·ªÅn ngay l·∫≠p t·ª©c
local boatProtectTween = nil
local boatProtectConnection = nil
local originalBoatProtectY = nil
local currentBoat = nil
_G.Random_Auto = false -- Auto Random Fruit
local rockTouchConnection = nil -- Bi·∫øn connection cho s·ª± ki·ªán ch·∫°m ƒë√°

-- Danh s√°ch ƒë·∫£o
local islands = {
    Tiki = Vector3.new(-16208.6, 10.4, 500.9),
    Hydra = Vector3.new(5164.5, 48.1, 2094.1),
    ["Ph√°o ƒë√†i"] = Vector3.new(-5122.9, 315.7, -2961.9),
    ["Dinh Th·ª±"] = Vector3.new(-12551.5, 338.5, -7552.3),
    ["L√¢u ƒê√†i B√≥ng T·ªëi"] = Vector3.new(-9508.9, 158.4, 4894.1),
    ["C·∫£ng"] = Vector3.new(-221.3, 22.3, 5517.8),
    ["C√¢y ƒê·∫°i Th·ª•"] = Vector3.new(2130.8, 23.1, -6635.9),
    ["ƒê·∫£o B√°nh"] = Vector3.new(-1928.6, 15.1, -11582.4)
}

-- Th√™m ch·ª©c nƒÉng cho IslandTab
IslandTab:AddDropdown("Ch·ªçn ƒë·∫£o", {
    Title = "Ch·ªçn ƒë·∫£o",
    Values = {"Tiki", "Hydra", "Ph√°o ƒë√†i", "Dinh Th·ª±", "L√¢u ƒê√†i B√≥ng T·ªëi"},
    Callback = function(Value)
        selectedIslandCoord = islands[Value]
        Fluent:Notify({
            Title = "ƒê·∫£o ",
            Content = "ƒê√£ ch·ªçn " .. Value,
            Duration = 3
        })
    end
})

-- Th√™m ch·ª©c nƒÉng cho FruitTab
FruitTab:AddToggle("Find Fruit", {
    Title = "T√¨m v√† ESP Fruit",
    Description = "T√¨m ki·∫øm v√† hi·ªÉn th·ªã ESP Fruit",
    Callback = function(Value)
        if Value then
            Fluent:Notify({
                Title = "Fruit ESP",
                Content = "ƒê√£ b·∫≠t ESP Fruit",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Fruit ESP",
                Content = "ƒê√£ t·∫Øt ESP Fruit",
                Duration = 3
            })
        end
    end
})

-- Th√™m ch·ª©c nƒÉng cho OtherTab
OtherTab:AddToggle("Anti Die", {
    Title = "Anti Die",
    Description = "Ch·ªâ k√≠ch ho·∫°t khi HP <= 30%",
    Callback = function(Value)
        if Value then
            Fluent:Notify({ Title = "Anti Die", Content = "K√≠ch ho·∫°t", Duration = 3 })
        else
            Fluent:Notify({ Title = "Anti Die", Content = "V√¥ hi·ªáu h√≥a", Duration = 3 })
        end
    end
})
